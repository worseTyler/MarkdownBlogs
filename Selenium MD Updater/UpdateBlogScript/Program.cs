using OpenQA.Selenium;
using System.Threading;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Linq;
using OpenQA.Selenium.Chrome;

namespace UpdateBlogScript
{
    class Program
    {
        public static int Count = 0;
        static void Main(string[] args)
        {
            List<int> list = new()
            {
                //434,
                //395,
                //367,
                //354,
                //344,
                //286,
                //262,
                //230,
                //204,
                //199,
                //197,
                //188,
                //172,
                //169,
                //164,
                //162,
                //159,
                //158,
                //145,
                //134,
                //124,
                //123,
                //105,
                //95,
                //93,
                //80,
                //61,
                //449,
                //53,
                //52,
                //1678,
                //8281,
                //2148,
                //2578,
                //2853,
                //3207,
                //3592,
                //3601,
                //3608,
                //3621,
                //3638,
                //3746,
                //3751,
                //3784,
                //3853,
                //3915,
                //36929,
                //36937,
                //4038,
                //4040,
                //4042,
                //36935,
                //10931,
                //10961,
                //3615,
                //11531,
                //14301,
                //14381,
                //14551,
                //16381,
                //17001,
                //18191,
                //17691,
                //18631,
                //18691,
                //18761,
                //18861,
                //18901,
                //18921,
                //18981,
                //19171,
                //19631,
                //19681,
                //19731,
                //19761,
                //20212,
                //20331,
                //20571,
                //20691,
                //20871,
                //21031,
                //21511,
                //21641,
                //21821,
                //21861,
                //22011,
                //22271,
                //22311,
                //23091,
                //23141,
                //23671,
                //23981,
                //24091,
                //24392,
                //24562,
                //24772,
                //25081,
                //25392,
                //25451,
                //25671,
                //26761,
                //27301,
                //27381,
                //36907,
                //27741,
                //36898,
                //28401,
                //28421,
                //28441,
                //28461,
                //36893,
                //36888,
                //27631,
                //28991,
                //28511,
                //29721,
                //36883,
                //30641,
                //30451,
                //32231,
                //32001,
                //36876,
                //32728,
                //32742,
                //32772,
                //32872,
                //32891,
                //32917,
                //32861,
                //32983,
                //33009,
                //33018,
                //36874,
                //33102,
                //33129,
                //32836,
                //32914,
                //33116,
                //33118,
                //33121,
                //33185,
                //33203,
                //33193,
                //33240,
                //36872,
                //33611,
                //33643,
                //33632,
                //33637,
                //33641,
                //33639,
                //33630,
                //33891,
                //33903,
                //34086,
                //34103,
                //34711,
                //34530,
                //34677,
                //36231,
                //34675,
                //34636,
                //34853,
                //34862,
                //34877,
                //34838,
                //36855,
                //35012,
                //35022,
                //34983,
                //35084,
                //35076,
                //35094,
                //35197,
                //35219,
                //35223,
                //35135,
                //35221,
                //35909,
                //35888,
                //36216,
                //36114,
                //36168,
                //36166,
                //36159,
                //36162,
                //36358,
                //36417,
                //36496,
                //36476,
                //36752,
                //36690,
                //36661,
                //36616,
                //36626,
                //36801,
                //36464,
                //36719,
                //36793,
                //36707,
                //36701,
                //37023,
                //36848,
                //37136,
                //37132,
                //37082,
                //37121,
                //37507,
                //37493,
                //37488,
                //37808,
                //37801,
                //37046,
                //38092,
                //38151,
                //38111,
                //38147,
                //38129,
                //38113,
                //39502,
                //39534,
                //39549,
                //39860,
                //39893,
                //39895,
                //39897,
                //40021,
                //40927,
                //41256,
                //41017,
                //41114,
                //40102,
                //41924,
                //42114,
                //42282,
                //42291,
                //42352,
                //42313,
                //42603,
                //42547,
                //42653,
                //43899,
                //42776,
                //44194,
                18191,
                434,
                17691,
                395,
                18631,
                367,
                18691,
                354,
                18761,
                344,
                18861,
                286,
                18901,
                262,
                230,
                18921,
                18981,
                204,
                19171,
                199,
                19631,
                197,
                19681,
                188,
                19731,
                172,
                19761,
                169,
                20212,
                20331,
                164,
                20571,
                162,
                20691,
                159,
                20871,
                158,
                21031,
                145,
                21511,
                134,
                21641,
                124,
                21821,
                123,
                21861,
                105,
                22011,
                95,
                22271,
                93,
                22311,
                80,
                23091,
                61,
                23141,
                449,
                23671,
                53,
                23981,
                52,
                24091,
                24392,
                1678,
                24562,
                8281,
                24772,
                2148,
                25081,
                2578,
                25392,
                2853,
                25451,
                3207,
                25671,
                3592,
                26761,
                3601,
                27301,
                3608,
                27381,
                3621,
                36907,
                3638,
                27741,
                3746,
                36898,
                3751,
                28401,
                3784,
                28421,
                3853,
                28441,
                3915,
                28461,
                36929,
                36893,
                36937,
                4038,
                36888,
                4040,
                27631,
                4042,
                28991,
                36935,
                28511,
                10931,
                29721,
                10961,
                36883,
                3615,
                30641,
                11531,
                30451,
                14301,
                32231,
                14381,
                32001,
                14551,
                36876,
                16381,
                17001,
                35135
            };
            int numWorkers = 1;

            Parallel.For(0, numWorkers, new ParallelOptions { MaxDegreeOfParallelism = numWorkers }, i =>
            {
                DoWork(i, numWorkers, list);
            });
        }
        public static void GoToUrl(IWebDriver driver, int id)
        {
            driver.Navigate().GoToUrl($"https://itltcweb-clone.azurewebsites.net/wp-admin/post.php?post={id}&action=edit");
            try
            {
                var possibleBox = driver.FindElement(By.Id("markdown-switch"));
                possibleBox.Click();
                Console.WriteLine($"Weird Page: {id}");

            }
            catch
            {
                var updateBox = driver.FindElement(By.Id("publish"));
                updateBox.Click();
            }
        }
        public static void DoWork(int worker, int numWorkers, List<int> list)
        {
            int totalWork = list.Count();
            int start = totalWork * worker / numWorkers;
            int end = totalWork * (worker + 1) / numWorkers;
            ChromeOptions options = new ChromeOptions();
            options.AddArgument("--incognito");
            //options.AddArgument("headless");
            IWebDriver driver = new OpenQA.Selenium.Chrome.ChromeDriver(options);
            driver.Navigate().GoToUrl("https://itltcweb-clone.azurewebsites.net/wp-admin");

            var userNameBox = driver.FindElement(By.Id("user_login"));
            var passwordBox = driver.FindElement(By.Id("user_pass"));
            var loginBox = driver.FindElement(By.Id("wp-submit"));
            userNameBox.SendKeys("wp_bot");
            passwordBox.SendKeys("1LR9rR#NVPzACI%UX!3B%hcT");
            loginBox.Click();
            Thread.Sleep(5000);
            for (int i = start; i < end; i++)
            {
                int index = i % totalWork;  
                try
                {
                    GoToUrl(driver, list[index]);
                    Interlocked.Increment(ref Count);
                    Console.WriteLine($"Success {Count} of {totalWork}: {list[index]}");
                }
                catch (Exception ex)
                {
                    Console.WriteLine(ex);
                    Console.WriteLine($"Error: {list[index]}");
                }
            }
            driver.Close();
        }
    }
}
