<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	<!-- generator="WordPress/5.7.2" created="2021-07-12 18:13" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>IntelliTect</title>
	<link>https://intellitect.com</link>
	<description>IntelliTect Web Site</description>
	<pubDate>Mon, 12 Jul 2021 18:13:38 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://intellitect.com</wp:base_site_url>
	<wp:base_blog_url>https://intellitect.com</wp:base_blog_url>

		<wp:author><wp:author_id>2</wp:author_id><wp:author_login><![CDATA[Mark]]></wp:author_login><wp:author_email><![CDATA[m@itl.tc]]></wp:author_email><wp:author_display_name><![CDATA[Mark Michaelis]]></wp:author_display_name><wp:author_first_name><![CDATA[Mark]]></wp:author_first_name><wp:author_last_name><![CDATA[Michaelis]]></wp:author_last_name></wp:author>

				
	<generator>https://wordpress.org/?v=5.7.2</generator>

<image>
	<url>https://intellitect.com/wp-content/uploads/2017/02/cropped-favicon-1-32x32.png</url>
	<title>IntelliTect</title>
	<link>https://intellitect.com</link>
	<width>32</width>
	<height>32</height>
</image> 

		<item>
		<title><![CDATA[Unsuccessfully Defining a Wrapper for Debug.Assert()]]></title>
		<link>https://intellitect.com/?p=133</link>
		<pubDate>Sun, 23 Oct 2005 14:01:06 +0000</pubDate>
		<dc:creator><![CDATA[Mark]]></dc:creator>
		<guid isPermaLink="false">http://mark.michaelis.net/Blog/UnsuccessfullyDefiningAWrapperForDebugAssert.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[In my previous post, I mentioned how <span style="font-family: Courier New;">Debug.Assert()</span> is nice in debug builds but that in release builds it should be replaced by throwing an exception if the conditional is false.&nbsp;&nbsp;It seems fairly obvious to define a wrapper around <span style="font-family: Courier New;">Debug.Assert()</span> as follows:
<blockquote style="margin-right: 0px;" dir="ltr"><span style="font-family: Courier New;"><span style="color: #0000ff;">void</span> Assert(<span style="color: #0000ff;">bool</span> condition)
{
<span style="color: #0000ff;"> if</span>(condition)
{
System.Diagnostics.Debug.Assert(condition, message);
</span><span style="font-family: Courier New;"><span style="color: #008000;"> // Throw exception...
</span> }
}</span></blockquote>
<p dir="ltr">The problem comes in the commented out code.&nbsp; Presumably, it should be possible to define the exception type that is thrown in the call to <span style="font-family: Courier New;">Assert()</span>.&nbsp; However, we don't want to instantiate an exception if we are not going to get throw it.&nbsp; Instead, it seems a better solution would be to supply the exception type using generics as follows:</p>

<blockquote style="margin-right: 0px;" dir="ltr"><span style="font-family: Courier New;"><span style="color: #0000ff;">void</span> Assert&lt;T&gt;(<span style="color: #0000ff;">bool</span> condition, <span style="color: #0000ff;">string</span> message)
<span style="color: #0000ff;"> where</span> T : System.<span style="color: #008080;">Exception</span>, <span style="color: #0000ff;">new</span>()
{
<span style="color: #0000ff;"> if</span>(condition)
{
System.Diagnostics.Debug.Assert(condition, message);
</span><span style="font-family: Courier New;">
</span><span style="font-family: Courier New;"><span style="color: #008000;"><span style="color: #008000;"> // 1.&nbsp; ERROR: T cannot provide objects in instantiation
//&nbsp;&nbsp;&nbsp;&nbsp; of type parameters
// </span><span style="color: #0000ff;">throw</span><strong> </strong><span style="color: #0000ff;">new</span><strong> </strong></span>T(message);</span>

<span style="font-family: Courier New;"><span style="color: #008000;"> // 2. ERROR: Exception.Message is readonly</span>
</span><span style="color: #008000;"><span style="font-family: Courier New;"> // </span></span><span style="font-family: Courier New;">T exception = <span style="color: #0000ff;">new</span> T();
// exception.Message = message</span><span style="color: #008000;"><span style="font-family: Courier New;">
</span></span><span style="font-family: Courier New;"> }
}</span></blockquote>
<p dir="ltr">The problem with this code is that:</p>

<ol dir="ltr">
 	<li>
<div>The constructor constraint (<span style="font-family: Courier New;">new()</span>) only works on default (parameterless) constructors.</div></li>
 	<li>
<div>exception.Message is readonly.</div></li>
</ol>
<p dir="ltr">In conclusion, unless the conditional of the assert is expensive, don't use <span style="font-family: Courier New;">Debug.Assert()</span>, simply throw an exception if the conditional is false.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>133</wp:post_id>
		<wp:post_date><![CDATA[2005-10-23 07:01:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-10-23 14:01:06]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-24 14:05:09]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-24 21:05:09]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[unsuccessfully-defining-a-wrapper-for-debug-assert]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="net"><![CDATA[.Net]]></category>
		<category domain="category" nicename="blog"><![CDATA[Blog]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[161]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[161]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[161]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[161]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[trx_addons_post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[20]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yst_prominent_words_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[slide_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_contextly_display_widgets]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_heateor_sss_meta]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:2:{s:7:"sharing";i:0;s:16:"vertical_sharing";i:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskeywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_keywordsynonyms]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>124</wp:comment_id>
			<wp:comment_author><![CDATA[Maha Sanjeev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2009-03-02 11:25:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2009-03-02 11:25:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sorry to make you aware, but you are wrong.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[trx_addons_comment_likes_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Don&#039;t use the System.Diagnostics Assert() methods unless...]]></title>
		<link>https://intellitect.com/dont-use-the-system-diagnostics-assert-methods-unless/</link>
		<pubDate>Sat, 22 Oct 2005 16:53:52 +0000</pubDate>
		<dc:creator><![CDATA[Mark]]></dc:creator>
		<guid isPermaLink="false">http://mark.michaelis.net/Blog/DontUseTheSystemDiagnosticsAssertMethodsUnless.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="margin: 0in 0in 0pt;"><span style="font-family: Verdana; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: Verdana;">Assertions should never appear in release code.&nbsp; Assertions are a debug mechanism for revealing bugs within code during development.&nbsp; Failed assertions in release code indicate the bug was missed and allow the option of debugging at the assertion location.&nbsp; <em>However, end users should not be presented with dialogs for debugging an application.&nbsp; Therefore, </em></span></span><em><span style="font-family: Courier New; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: 'Courier New';">System.Diagnostics.<strong>Trace</strong>.Assert()</span></span><span style="font-family: Verdana; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: Verdana;"> should be treated as obsolete.</span></span></em></p>
<p style="margin: 0in 0in 0pt;"><span style="font-family: Verdana; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: Verdana;"> </span></span></p>
<p style="margin: 0in 0in 0pt;"><span style="font-family: Verdana; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: Verdana;">One advantage of <span style="font-family: Courier New;">Debug.Assert()</span> is that </span></span><span style="font-family: Verdana; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: Verdana;">the C#&nbsp;and VB compilers (not C++) eliminate the </span></span><span style="font-family: Courier New; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: 'Courier New';">Debug.Assert()</span></span><span style="font-family: Verdana; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: Verdana;"> statement from the CIL code when the&nbsp;<span style="font-family: Courier New;">DEBUG</span> precompile constant is not defined.&nbsp; Therefore, even the conditional check in </span></span><span style="font-family: Courier New; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: 'Courier New';">Debug.Assert()</span></span><span style="font-family: Verdana; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: Verdana;"> will never appear in a release builds.&nbsp; In other words, the&nbsp;statement</span></span></p>
<p style="margin: 0in 0in 0pt;"><span style="font-family: Verdana; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: Verdana;"> <span style="font-family: Courier New;">System.Diagnostics.Debug.Assert( ReallyLongRunningMethodThatReturnsBool() );</span> </span></span></p>
<p style="margin: 0in 0in 0pt;"><span style="font-family: Verdana; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: Verdana;">will not even call <span style="font-family: Courier New;">ReallyLongRunningMethodThatReturnsBool()</span> when <span style="font-family: Courier New;">DEBUG</span> is defined.&nbsp; Therefore, use <span style="font-family: Courier New;">Debug.Assert()</span> for expensive conditionals and replace the code in release builds with tests that explicitly check that the false conditional didn't occur.&nbsp; <span style="font-size: 10pt; color: black; font-family: Verdana;"><span style="font-family: Courier New;"><strong>Debug</strong>.Assert()</span> is useful for when the condition specified is a long running/expensive method and the compiler is C#, Visual Basic.NET, or some compiler that pays attention to the <span style="font-family: Courier New;">ConditionalAttribute</span> (the C++ CLR compiler does not).</span></span></span></p>
<p style="margin: 0in 0in 0pt;"><span style="font-family: Verdana; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: Verdana;"> </span></span></p>
<span style="font-family: Verdana; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: Verdana;"> </span></span>
<p style="margin: 0in 0in 0pt;"><span style="font-family: Verdana; color: black; font-size: x-small;"><span style="font-family: Verdana; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: Verdana;">Another&nbsp;advantage of the assert is that it stops execution at the exact location of the assert, rather than bubbling up to the exception handler or as an unhandled exception.&nbsp; <span style="font-size: 10pt; color: black; font-family: Verdana;">However, we still don't want the assertion&nbsp;situation (the bad situation) to be ignored in release code, which is what would happen with <span style="font-family: Courier New;">Debug.Assert()</span>.&nbsp;&nbsp;Therefore,&nbsp;if the conditional is false,&nbsp;it should&nbsp;be reported as an&nbsp;exception not an assertion in release code.</span></span></span></span></p>
<p style="margin: 0in 0in 0pt;"><span style="font-family: Verdana; color: black; font-size: x-small;"><span style="font-size: 10pt; color: black; font-family: Verdana;"> </span></span></p>
<strong>Conclusion:</strong>

<span style="font-size: 10pt; color: black; font-family: Verdana;">Don't use assertions unless:</span>
<ol>
 	<li><span style="font-family: Courier New;"><span style="font-size: 10pt; font-family: Verdana;">The assertion conditional is expensive and you have&nbsp;unit tests in place that check the false assertion condition doesn't occur&nbsp;or</span></span></li>
 	<li><span style="font-family: Courier New;"><span style="font-size: 10pt; font-family: Verdana;"><span style="font-size: 10pt; font-family: Verdana;">You plan on a search and replace for them before releasing.</span></span></span></li>
</ol>
<span style="font-size: 10pt; color: black; font-family: Verdana;">Otherwise, give up on assertion&nbsp;methods and use exceptions in both release and debug builds.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>134</wp:post_id>
		<wp:post_date><![CDATA[2005-10-22 16:53:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-10-22 16:53:52]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-04-15 08:02:25]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-04-15 16:02:25]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dont-use-the-system-diagnostics-assert-methods-unless]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="net"><![CDATA[.Net]]></category>
		<category domain="category" nicename="blog"><![CDATA[Blog]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[161]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[trx_addons_post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[115]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_contextly_display_widgets]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[slide_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[32]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_heateor_sss_meta]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:2:{s:7:"sharing";i:0;s:16:"vertical_sharing";i:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yst_prominent_words_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>122</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Freidgeim]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2007-04-19 23:47:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2007-04-20 06:47:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Did you mean:
&quot;will not even call ReallyLongRunningMethodThatReturnsBool() when DEBUG is  NOT defined.&quot;?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[trx_addons_comment_likes_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>123</wp:comment_id>
			<wp:comment_author><![CDATA[Siarhei]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[noreply@noreply.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2008-03-25 09:50:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2008-03-25 09:50:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In a production code we can allow to ourselves inefficiency by adding assertions.

From &quot;Code complete&quot; by McConel]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[trx_addons_comment_likes_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Pre-ordering Essential C# by Mark Michaelis]]></title>
		<link>https://intellitect.com/?p=135</link>
		<pubDate>Mon, 10 Oct 2005 14:51:41 +0000</pubDate>
		<dc:creator><![CDATA[Mark]]></dc:creator>
		<guid isPermaLink="false">http://mark.michaelis.net/Blog/PreorderingEssentialCByMarkMichaelis.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[I just noticed that you can pre-order my next book - <a href="https://www.amazon.com/exec/obidos/ASIN/0321150775/" target="_blank" rel="noopener noreferrer">Essential C#</a>.  Excellent!
<blockquote style="margin-right: 0px;" dir="ltr"><a href="https://www.amazon.com/exec/obidos/ASIN/0321150775/" target="_blank" rel="noopener noreferrer"><img src="/wp-content/uploads/binary/EssentialCSharpCover.jpg" border="0" alt="EssentialCSharpCover.jpg" width="240" height="240" /></a></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>135</wp:post_id>
		<wp:post_date><![CDATA[2005-10-10 14:51:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-10-10 14:51:41]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-11 18:25:15]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-12 01:25:15]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pre-ordering-essential-c-by-mark-michaelis__trashed]]></wp:post_name>
		<wp:status><![CDATA[trash]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="net"><![CDATA[.Net]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[trx_addons_post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yst_prominent_words_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
		<wp:meta_value><![CDATA[publish]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
		<wp:meta_value><![CDATA[1623461115]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_desired_post_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[pre-ordering-essential-c-by-mark-michaelis]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_comments_status]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:121;s:1:"1";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>121</wp:comment_id>
			<wp:comment_author><![CDATA[Omar Shahine]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shahineo@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-03-24 17:36:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2006-03-24 17:36:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool, ordered]]></wp:comment_content>
			<wp:comment_approved><![CDATA[post-trashed]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[trx_addons_comment_likes_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[You just can&#039;t please every one]]></title>
		<link>https://intellitect.com/?p=137</link>
		<pubDate>Fri, 07 Oct 2005 06:49:47 +0000</pubDate>
		<dc:creator><![CDATA[Mark]]></dc:creator>
		<guid isPermaLink="false">http://mark.michaelis.net/Blog/YouJustCantPleaseEveryOne.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[I am in the process of reviewing technical feedback on the Multi-threading Patterns chapter of my upcoming book.  I came across the following two comments submitted by two different people referring to the exact same sentence:
<blockquote style="margin-right: 0px;" dir="ltr">"Oooh, no, we shouldn't make this recommendation..."</blockquote>
<p dir="ltr">and</p>

<blockquote style="margin-right: 0px;" dir="ltr">"Great tip"</blockquote>
<p dir="ltr">I genuinely love the feedback I get from tech. edits.  It is truly phenomenal.  I am repeatedly amazed by their in-depth knowledge and incredible perceptiveness.  Sometimes, however, I am not exactly sure to how to handle the feedback.  :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>137</wp:post_id>
		<wp:post_date><![CDATA[2005-10-07 06:49:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-10-07 06:49:47]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-11 18:25:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-12 01:25:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[you-just-cant-please-every-one__trashed]]></wp:post_name>
		<wp:status><![CDATA[trash]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="net"><![CDATA[.Net]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[trx_addons_post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[15]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yst_prominent_words_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
		<wp:meta_value><![CDATA[publish]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
		<wp:meta_value><![CDATA[1623461121]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_desired_post_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[you-just-cant-please-every-one]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Introducing Microsoft Visual Studio 2005 Team System Web Testing]]></title>
		<link>https://intellitect.com/?p=138</link>
		<pubDate>Thu, 06 Oct 2005 06:08:01 +0000</pubDate>
		<dc:creator><![CDATA[Mark]]></dc:creator>
		<guid isPermaLink="false">http://mark.michaelis.net/Blog/IntroducingMicrosoftVisualStudio2005TeamSystemWebTesting.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnvs05/html/vs05tmsyswebtst.asp">This article</a> introduces the Web Testing functionality in Microsoft Visual Studio 2005 Team System, and demonstrates how to create and customize a Web test case. - by Mark Michaelis]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date><![CDATA[2005-10-06 06:08:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-10-06 06:08:01]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-11 17:02:28]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-12 00:02:28]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[introducing-microsoft-visual-studio-2005-team-system-web-testing__trashed]]></wp:post_name>
		<wp:status><![CDATA[trash]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="net"><![CDATA[.Net]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[trx_addons_post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[21]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yst_prominent_words_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
		<wp:meta_value><![CDATA[publish]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
		<wp:meta_value><![CDATA[1623456123]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_desired_post_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[introducing-microsoft-visual-studio-2005-team-system-web-testing]]></wp:meta_value>
		</wp:postmeta>
							</item>
				</channel>
</rss>
	
<!--
Performance optimized by W3 Total Cache. Learn more: https://www.boldgrid.com/w3-total-cache/

Object Caching 30/80 objects using wincache
Page Caching using disk: enhanced{w3tc_pagecache_reject_reason}
Lazy Loading (WP_ADMIN)
Database Caching using wincache (Request-wide wp-admin)

Served from: intellitect.com @ 2021-07-12 11:13:38 by W3 Total Cache
-->